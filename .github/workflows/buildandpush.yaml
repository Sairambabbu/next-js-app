name: next-js-app

on:
  pull_request:
    branches: ["main", "dev", "qa", "demo"]
    types: [opened, synchronize, reopened]
  push:
    branches:
      - rc/*

jobs:
  validate-rc-pr:
    name: Validate PR source branch is rc/*
    runs-on: ubuntu-latest
    steps:
      - name: Validate PR or Push Source
        run: |
          echo "üîç Event: ${{ github.event_name }}"
          echo "üîç Head ref: ${{ github.head_ref }}"
          echo "üîç Ref: ${{ github.ref }}"

          if [[ "${{ github.event_name }}" == "pull_request" ]]; then
            if [[ "${{ github.head_ref }}" != rc/* ]]; then
              echo "‚ùå Invalid PR source branch! Only rc/* branches are allowed."
              exit 1
            fi
            echo "‚úÖ Valid PR from rc/* branch."
          elif [[ "${{ github.event_name }}" == "push" ]]; then
            if [[ "${{ github.ref }}" != refs/heads/rc/* ]]; then
              echo "‚ùå Invalid push target! Only rc/* branches are allowed."
              exit 1
            fi
            echo "‚úÖ Valid push to rc/* branch."
          else
            echo "‚ùå Unsupported event type: ${{ github.event_name }}"
            exit 1
          fi

  build:
    name: Build Application
    runs-on: ubuntu-latest
    needs: [validate-rc-pr]
    strategy:
      matrix:
        node-version: [20.x]
    steps:
      - uses: actions/checkout@v4

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Installing Dependencies
        run: npm install

      - name: Build command
        run: npm run build

  unit-tests:
    name: Run Unit Tests
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20.x
          cache: 'npm'

      - name: Installing Dependencies
        run: npm install

      - name: Running test cases
        run: npm run test

  docker-build-push:
    name: Build & Push Docker Image to ECR
    runs-on: ubuntu-latest
    needs: [unit-tests]
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS credentials (OIDC)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.OIDC_ROLE_DEV }}
          aws-region: us-east-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build, Tag, and Push Docker Image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: dev/next-js-app
          IMAGE_TAG: ${{ github.run_id }}
        run: |
          echo "üîß Building Docker image..."
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker tag $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG $ECR_REGISTRY/$ECR_REPOSITORY:latest
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:latest
          echo "‚úÖ Docker image pushed to ECR: $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"
