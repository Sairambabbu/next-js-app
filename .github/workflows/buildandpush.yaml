name: next-js-app

on:
  pull_request:
    branches: ["main", "dev", "qa"]
    types:
      - opened
      - synchronize
      - reopened
  push:
    branches:
      - rc/*

jobs:
  validate-rc-pr:
    name: Validate PR source branch is rc/*
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    steps:
      - name: Check PR source branch
        run: |
          echo "PR source branch: ${{ github.head_ref }}"
          if [[ "${{ github.head_ref }}" != rc/* ]]; then
            echo "❌ PR is NOT from rc/* branch — failing the check!"
            exit 1
          fi
          echo "✅ PR is from rc/* branch — check passed."

  build:
    name: Build Application
    runs-on: ubuntu-latest
    needs: [validate-rc-pr]
    if: github.event_name == 'push' || github.event_name == 'pull_request'
    strategy:
      matrix:
        node-version: [18.x, 20.x, 22.x]
    steps:
      - uses: actions/checkout@v4

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Installing Dependencies
        run: npm install

      - name: Build command
        run: npm run build

  unit-tests:
    name: Run Unit Tests
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - uses: actions/checkout@v4

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Installing Dependencies
        run: npm install

      - name: Running test cases
        run: npm run test

  docker-build-push:
    name: Build & Push Docker Image to ECR
    runs-on: ubuntu-latest
    needs: [unit-tests]
    permissions:
      id-token: write
      contents: read

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS credentials (OIDC)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.OIDC_ROLE_DEV }}
          aws-region: us-east-1  # or your region

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build, Tag, and Push Docker Image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: next-js-app
          IMAGE_TAG: ${{ github.run_id }}
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker tag $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG $ECR_REGISTRY/$ECR_REPOSITORY:latest
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:latest

      - name: Image pushed successfully
        run: echo "✅ Docker image pushed to ECR: ${{ steps.login-ecr.outputs.registry }}/next-js-app:${{ github.run_id }}"
