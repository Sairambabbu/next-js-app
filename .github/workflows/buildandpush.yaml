name: next-js-app

on:
  push:
    branches:
      - 'rc/**'
    tags:
      - '*.*.*'

  pull_request_target:
    types:
      - closed
    branches:
      - dev
      - qa
      - main

env:
  AWS_REGION: us-east-1
  ECR_REGISTRY: 833237060739.dkr.ecr.us-east-1.amazonaws.com

jobs:
  validate-pr:
    name: Validate PR Source Branch
    if: github.event_name == 'pull_request_target'
    runs-on: ubuntu-latest
    steps:
      - name: Validate PR source branch is rc/*
        run: |
          echo "üîç Validating PR source branch..."
          echo "PR head ref: ${{ github.head_ref }}"
          if [[ "${{ github.head_ref }}" != rc/* ]]; then
            echo "‚ùå Invalid PR source branch! Only rc/* source branches are allowed."
            exit 1
          fi
          echo "‚úÖ Valid PR from rc/* branch."

  build-test:
    name: Build & Test
    runs-on: ubuntu-latest
    needs: [validate-pr]
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: Install Dependencies
        run: npm ci

      - name: Build App
        run: npm run build

      - name: Run Unit Tests
        run: npm test

  docker-build-push:
    name: Build & Push Docker Image to ECR
    runs-on: ubuntu-latest
    needs: [build-test]
    if: |
      github.event_name == 'push' ||
      (github.event_name == 'pull_request_target' && github.event.pull_request.merged == true)
    permissions:
      id-token: write
      contents: write

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Determine Environment and Repo
        id: vars
        run: |
          BRANCH="${GITHUB_REF#refs/heads/}"
          SHORT_SHA=$(echo "${GITHUB_SHA}" | cut -c1-7)
          if [[ "$BRANCH" == dev ]]; then
            echo "ENV=dev" >> $GITHUB_OUTPUT
            echo "ECR_REPO=dev/next-js-app" >> $GITHUB_OUTPUT
          elif [[ "$BRANCH" == qa ]]; then
            echo "ENV=qa" >> $GITHUB_OUTPUT
            echo "ECR_REPO=qa/next-js-app" >> $GITHUB_OUTPUT
          elif [[ "$BRANCH" == main ]]; then
            echo "ENV=prod" >> $GITHUB_OUTPUT
            echo "ECR_REPO=prod/next-js-app" >> $GITHUB_OUTPUT
          elif [[ "$BRANCH" == rc/* ]]; then
            echo "ENV=rc" >> $GITHUB_OUTPUT
            echo "ECR_REPO=dev/next-js-app" >> $GITHUB_OUTPUT
          else
            echo "ENV=unknown" >> $GITHUB_OUTPUT
            exit 1
          fi
          echo "SHORT_SHA=${SHORT_SHA}" >> $GITHUB_OUTPUT

      - name: Configure AWS Credentials (OIDC)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.OIDC_ROLE_DEV }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to ECR
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build, Tag & Push Docker Image
        run: |
          IMAGE_TAG="${{ steps.vars.outputs.ENV }}-${{ steps.vars.outputs.SHORT_SHA }}"
          REPO="${{ env.ECR_REGISTRY }}/${{ steps.vars.outputs.ECR_REPO }}"
          echo "üß± Building image: $REPO:$IMAGE_TAG"
          docker build -t "$REPO:$IMAGE_TAG" .
          docker push "$REPO:$IMAGE_TAG"
          docker tag "$REPO:$IMAGE_TAG" "$REPO:latest"
          docker push "$REPO:latest"
          echo "‚úÖ Image pushed: $REPO:$IMAGE_TAG"

  post_main_branch_tasks:
    name: Post Merge Tasks (Recreate Dev & QA)
    runs-on: ubuntu-latest
    needs: docker-build-push
    if: github.ref == 'refs/heads/main'
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Create Release Branch
        run: |
          RELEASE_BRANCH="release/${GITHUB_SHA::7}"
          echo "üì¶ Creating release branch: $RELEASE_BRANCH"
          git checkout -b "$RELEASE_BRANCH"
          git push origin "$RELEASE_BRANCH"

      - name: Recreate Dev and QA Branches from Main
        run: |
          git fetch origin
          for BR in dev qa; do
            echo "üîÅ Recreating branch $BR from main..."
            git push origin --delete $BR || true
            git push origin main:$BR
          done
