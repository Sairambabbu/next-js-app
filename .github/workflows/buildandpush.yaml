name: next-js-app

on:
  pull_request:
    branches: ["main", "dev", "qa", "demo"]
    types: [opened, synchronize, reopened]
  push:
    branches:
      - rc/*

jobs:
  validate-rc-pr:
    name: Validate PR source branch is rc/*
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    steps:
      - name: Validate PR source branch
        run: |
          echo "üîç Validating PR source branch..."
          echo "PR source branch: ${{ github.head_ref }}"
          if [[ "${{ github.head_ref }}" != rc/* ]]; then
            echo "‚ùå Invalid source branch! Only PRs from rc/* branches are allowed."
            exit 1
          fi
          echo "‚úÖ Valid PR source branch: ${{ github.head_ref }}"

  build:
    name: Build Application
    runs-on: ubuntu-latest
    # Run for pushes to rc/* or PRs from rc/* to main/dev/qa/demo
    if: |
      (github.event_name == 'push' && startsWith(github.ref, 'refs/heads/rc/')) ||
      (github.event_name == 'pull_request' && startsWith(github.head_ref, 'rc/'))
    needs: [validate-rc-pr]
    strategy:
      matrix:
        node-version: [18.x, 20.x, 22.x]
    steps:
      - uses: actions/checkout@v4

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Installing Dependencies
        run: npm install

      - name: Build command
        run: npm run build

  unit-tests:
    name: Run Unit Tests
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - uses: actions/checkout@v4

      - name: Use Node.js 20.x
        uses: actions/setup-node@v3
        with:
          node-version: 20.x
          cache: 'npm'

      - name: Installing Dependencies
        run: npm install

      - name: Running test cases
        run: npm run test

  docker-build-push:
    name: Build & Push Docker Image to ECR
    runs-on: ubuntu-latest
    needs: [unit-tests]
    permissions:
      id-token: write
      contents: read
    # Only push Docker image on rc/* push events (not PRs)
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/heads/rc/')

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS credentials (OIDC)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.OIDC_ROLE_DEV }}
          aws-region: us-east-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build, Tag, and Push Docker Image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: next-js-app
          IMAGE_TAG: ${{ github.run_id }}
        run: |
          echo "üîß Building Docker image..."
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker tag $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG $ECR_REGISTRY/$ECR_REPOSITORY:latest
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:latest
          echo "‚úÖ Docker image pushed to ECR: $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"
