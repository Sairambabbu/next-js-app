name: next-js-app

on:
  pull_request:
    types: [opened, synchronize]
  push:
    branches:
      - dev
      - qa
      - main
      - 'rc/*'

env:
  AWS_REGION: us-east-1
  ECR_REGISTRY: 833237060739.dkr.ecr.us-east-1.amazonaws.com

jobs:
  validate-pr:
    name: Validate PR source branch
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    steps:
      - name: Validate PR source branch is rc/*
        run: |
          echo "PR head ref: ${{ github.head_ref }}"
          if [[ "${{ github.head_ref }}" != rc/* ]]; then
            echo "❌ Invalid PR source branch! Only rc/* source branches are allowed."
            exit 1
          fi
          echo "✅ PR source branch is rc/* - proceed."

  build-test:
    name: Build & Test
    runs-on: ubuntu-latest
    needs: [validate-pr]
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20
      - name: Install
        run: npm ci
      - name: Build
        run: npm run build
      - name: Run tests
        run: npm test

  docker-build-push:
    name: Build & Push Image to ECR
    runs-on: ubuntu-latest
    needs: build-test
    if: github.event_name == 'push' && (startsWith(github.ref, 'refs/heads/dev') || startsWith(github.ref, 'refs/heads/qa') || startsWith(github.ref, 'refs/heads/main') || startsWith(github.ref, 'refs/heads/rc/'))
    permissions:
      id-token: write
      contents: write
    env:
      AWS_REGION: us-east-1
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Determine env & repos
        id: vars
        run: |
          BRANCH="${GITHUB_REF#refs/heads/}"
          SHORT_SHA=$(echo "${GITHUB_SHA}" | cut -c1-7)
          if [[ "$BRANCH" == "dev" ]]; then
            echo "ENV=dev" >> $GITHUB_OUTPUT
            echo "ECR_REPO=dev/next-js-app" >> $GITHUB_OUTPUT
            echo "VALUES_FILE=helm/nextjs/values-dev.yaml" >> $GITHUB_OUTPUT
          elif [[ "$BRANCH" == "qa" ]]; then
            echo "ENV=qa" >> $GITHUB_OUTPUT
            echo "ECR_REPO=qa/next-js-app" >> $GITHUB_OUTPUT
            echo "VALUES_FILE=helm/nextjs/values-qa.yaml" >> $GITHUB_OUTPUT
          elif [[ "$BRANCH" == "main" ]]; then
            echo "ENV=prod" >> $GITHUB_OUTPUT
            echo "ECR_REPO=prod/next-js-app" >> $GITHUB_OUTPUT
            echo "VALUES_FILE=helm/nextjs/values-prod.yaml" >> $GITHUB_OUTPUT
          elif [[ $BRANCH == rc/* ]]; then
            echo "ENV=rc" >> $GITHUB_OUTPUT
            echo "ECR_REPO=dev/next-js-app" >> $GITHUB_OUTPUT
            echo "VALUES_FILE=helm/nextjs/values-dev.yaml" >> $GITHUB_OUTPUT
          else
            echo "ENV=unknown" >> $GITHUB_OUTPUT
            exit 1
          fi
          echo "SHORT_SHA=${SHORT_SHA}" >> $GITHUB_OUTPUT

      - name: Configure AWS credentials (OIDC)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.OIDC_ROLE_DEV }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to ECR
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build, Tag, Push
        run: |
          IMAGE_TAG="${{ steps.vars.outputs.ENV }}-${{ steps.vars.outputs.SHORT_SHA }}"
          REPO="${{ env.ECR_REGISTRY }}/${{ steps.vars.outputs.ECR_REPO }}"
          echo "Building -> $REPO:$IMAGE_TAG"
          docker build -t "$REPO:$IMAGE_TAG" .
          docker push "$REPO:$IMAGE_TAG"
          # push a latest tag for convenience (optional)
          docker tag "$REPO:$IMAGE_TAG" "$REPO:latest"
          docker push "$REPO:latest"
          echo "image=$REPO:$IMAGE_TAG" >> $GITHUB_OUTPUT
  post-main-branch-tasks:
    name: Post Merge Tasks
    runs-on: ubuntu-latest
    needs: docker-build-push
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4

      - name: Create release branch
        run: |
          git checkout -b release/${GITHUB_SHA::7}
          git push origin release/${GITHUB_SHA::7}
